package tree;

public class CheckIfSubtree {

	public static void main(String[] args) {
		
		
		Node root = new Node(1);
		root.left = new Node(2);
		root.right = new Node(3);
		root.right.left = new Node(4);
		root.right.right = new Node(6);
		root.right.left.right = new Node(5);
		root.right.left.right.left = new Node(7);
		
		
		Node root1 = new Node(4);
		root1.right = new Node(5);
		root1.right.left = new Node(7);
		
		
		boolean  res = checkIfSubtree(root , root1);
		
		System.out.println(res);

	}

	private static boolean checkIfSubtree(Node root, Node root1) {
		
		
	 Node node = findRootNode(root , root1);
		
		if(node == null)
			return false;
		
		
		return checkSame(node , root1);
	}

	private static boolean checkSame(Node node, Node root1) {
		
		
		if(node != null && root1 != null)
		{
			
			if(node.data != root1.data)
				return false;
			
			boolean a = checkSame(node.left,root1.left);
			boolean b = checkSame(node.right,root1.right);
			
			if( !a || !b)
			return false;
		
			
		}
		
		if(node != null || root1 != null)
			return false;
		
		
		return true;
	}

	private static Node findRootNode(Node root, Node root1) {
		
		if(root != null)
		{
			if(root.data == root1.data)
				return root;
			
		Node a = findRootNode(root.left , root1);
		Node b = findRootNode(root.right , root1);
		
		if(a != null)
			return a;
		else if(b != null)
			return b;
		
		}
		
		
		return null;
	}

}
